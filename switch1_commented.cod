; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

	TITLE	C:\Users\nebab\Downloads\Asm4Programs\Asm4Programs\switch1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_f
; Function compile flags: /Odtp
; File c:\users\nebab\downloads\asm4programs\asm4programs\switch1.c
_TEXT	SEGMENT
tv65 = -8						; size = 4
_x$ = -4						; size = 4
_i$ = 8							; size = 4
_f	PROC

; 1    : void f(int i) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 2    :   int x = 4;

  00006	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR _x$[ebp], 4

; 3    : 
; 4    :   switch (i * 2) {

  0000d	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp] ; i -> eax
  00010	d1 e0		 shl	 eax, 1 ; bitshift eax to muliply by 2 (i * 2)
  00012	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax ; eax -> tv65
  ; check for case where (i * 2) = 10
  00015	83 7d f8 0a	 cmp	 DWORD PTR tv65[ebp], 10	; 0000000aH
  00019	74 0e		 je	 SHORT $LN4@f
    ; check for case where (i * 2) = 20
  0001b	83 7d f8 14	 cmp	 DWORD PTR tv65[ebp], 20	; 00000014H
  0001f	74 11		 je	 SHORT $LN5@f
    ; check for case where (i * 2) = 40
  00021	83 7d f8 28	 cmp	 DWORD PTR tv65[ebp], 40	; 00000028H
  00025	74 14		 je	 SHORT $LN6@f
  ; fall out to default case
  00027	eb 1b		 jmp	 SHORT $LN7@f
$LN4@f:

; 5    :     case 10: x = 10; break;

  00029	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR _x$[ebp], 10	; 0000000aH
  00030	eb 19		 jmp	 SHORT $LN1@f
$LN5@f:

; 6    :     case 20: x = 15; break;

  00032	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR _x$[ebp], 15	; 0000000fH
  00039	eb 10		 jmp	 SHORT $LN1@f
$LN6@f:

; 7    :     case 40: x = 18; break;

  0003b	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR _x$[ebp], 18	; 00000012H
  00042	eb 07		 jmp	 SHORT $LN1@f
$LN7@f:

; 8    :     default: x = -1;

  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _x$[ebp], -1
$LN1@f:

; 9    :   }
; 10   : }

  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_f	ENDP
_TEXT	ENDS
END
