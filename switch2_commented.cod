; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

	TITLE	C:\Users\nebab\Downloads\Asm4Programs\Asm4Programs\switch2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_f
; Function compile flags: /Odtp
; File c:\users\nebab\downloads\asm4programs\asm4programs\switch2.c
_TEXT	SEGMENT
tv65 = -8						; size = 4
_x$ = -4						; size = 4
_i$ = 8							; size = 4
_f	PROC

; 2    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 3    :   int x;
; 4    : 
; 5    :   switch (i+2) {

  00006	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp] ; i -> eax
  00009	83 c0 02	 add	 eax, 2 ; (i + 2)
  0000c	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax ; eax -> tv65
  0000f	8b 4d f8	 mov	 ecx, DWORD PTR tv65[ebp] ; tv65 -> ecx
  00012	83 e9 01	 sub	 ecx, 1 ; (i - 1)
  00015	89 4d f8	 mov	 DWORD PTR tv65[ebp], ecx ; ecx -> tv65
  00018	83 7d f8 04	 cmp	 DWORD PTR tv65[ebp], 4
  0001c	77 37		 ja	 SHORT $LN9@f ; jump to default case if (i > 5) or (i < 1)
  0001e	8b 55 f8	 mov	 edx, DWORD PTR tv65[ebp] ; tv65 -> edx
  00021	ff 24 95 00 00

; because the memory addresses in the jump table are 4 bytes, and in order, the address of the jump table with a offset of
; (i * 4) will give the exact memory location of the line to jump to. By using jump tables, it's possible to implement a
; switch statement with only one call to the "cmp" function.
	00 00		 jmp	 DWORD PTR $LN11@f[edx*4] ; if i is within case range, goto jump table
$LN4@f:

; 6    :    case 1: x = 2; break;

  00028	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR _x$[ebp], 2
  0002f	eb 2b		 jmp	 SHORT $LN1@f
$LN5@f:

; 7    :    case 2: x = 7; break;

  00031	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _x$[ebp], 7
  00038	eb 22		 jmp	 SHORT $LN1@f
$LN6@f:

; 8    :    case 3: x = 5; break;

  0003a	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR _x$[ebp], 5
  00041	eb 19		 jmp	 SHORT $LN1@f
$LN7@f:

; 9    :    case 4: x = 12; break;

  00043	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _x$[ebp], 12	; 0000000cH
  0004a	eb 10		 jmp	 SHORT $LN1@f
$LN8@f:

; 10   :    case 5: x = 23; break;

  0004c	c7 45 fc 17 00
	00 00		 mov	 DWORD PTR _x$[ebp], 23	; 00000017H
  00053	eb 07		 jmp	 SHORT $LN1@f
$LN9@f:

; 11   :    default: x = -1;

  00055	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _x$[ebp], -1
$LN1@f:

; 12   :   }
; 13   : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN11@f:
  00060	00 00 00 00	 DD	 $LN4@f ; 
  00064	00 00 00 00	 DD	 $LN5@f
  00068	00 00 00 00	 DD	 $LN6@f
  0006c	00 00 00 00	 DD	 $LN7@f
  00070	00 00 00 00	 DD	 $LN8@f
_f	ENDP
_TEXT	ENDS
END
