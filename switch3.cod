; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

	TITLE	C:\Users\nebab\Downloads\Asm4Programs\Asm4Programs\switch3.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_f
; Function compile flags: /Odtp
; File c:\users\nebab\downloads\asm4programs\asm4programs\switch3.c
_TEXT	SEGMENT
tv64 = -8						; size = 4
_x$ = -4						; size = 4
_i$ = 8							; size = 4
_f	PROC

; 1    : void f(int i) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 2    :   int x = 4;

  00006	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR _x$[ebp], 4

; 3    : 
; 4    :   switch (x) {

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _x$[ebp]
  00010	89 45 f8	 mov	 DWORD PTR tv64[ebp], eax
  00013	8b 4d f8	 mov	 ecx, DWORD PTR tv64[ebp]
  00016	83 e9 01	 sub	 ecx, 1
  00019	89 4d f8	 mov	 DWORD PTR tv64[ebp], ecx
  0001c	83 7d f8 20	 cmp	 DWORD PTR tv64[ebp], 32	; 00000020H
  00020	0f 87 e8 00 00
	00		 ja	 $LN26@f
  00026	8b 55 f8	 mov	 edx, DWORD PTR tv64[ebp]
  00029	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN28@f[edx*4]
$LN4@f:

; 5    :    case 1: x= 3; break;

  00030	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _x$[ebp], 3
  00037	e9 d9 00 00 00	 jmp	 $LN1@f
$LN5@f:

; 6    :    case 2: x = 4; break;

  0003c	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR _x$[ebp], 4
  00043	e9 cd 00 00 00	 jmp	 $LN1@f
$LN6@f:

; 7    :    case 3: x = 5; break;

  00048	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR _x$[ebp], 5
  0004f	e9 c1 00 00 00	 jmp	 $LN1@f
$LN7@f:

; 8    :    case 5: x = 6; break;

  00054	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR _x$[ebp], 6
  0005b	e9 b5 00 00 00	 jmp	 $LN1@f
$LN8@f:

; 9    :    case 6: x = 7; break;

  00060	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _x$[ebp], 7
  00067	e9 a9 00 00 00	 jmp	 $LN1@f
$LN9@f:

; 10   :    case 8: x = 8; break;

  0006c	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR _x$[ebp], 8
  00073	e9 9d 00 00 00	 jmp	 $LN1@f
$LN10@f:

; 11   :    case 9: x = 9; break;

  00078	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR _x$[ebp], 9
  0007f	e9 91 00 00 00	 jmp	 $LN1@f
$LN11@f:

; 12   :    case 10: x = 10; break;

  00084	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR _x$[ebp], 10	; 0000000aH
  0008b	e9 85 00 00 00	 jmp	 $LN1@f
$LN12@f:

; 13   :    case 12: x = 11; break;

  00090	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR _x$[ebp], 11	; 0000000bH
  00097	eb 7c		 jmp	 SHORT $LN1@f
$LN13@f:

; 14   :    case 13: x = 12; break;

  00099	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _x$[ebp], 12	; 0000000cH
  000a0	eb 73		 jmp	 SHORT $LN1@f
$LN14@f:

; 15   :    case 15: x = 13; break;

  000a2	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR _x$[ebp], 13	; 0000000dH
  000a9	eb 6a		 jmp	 SHORT $LN1@f
$LN15@f:

; 16   :    case 16: x = 14; break;

  000ab	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000b2	eb 61		 jmp	 SHORT $LN1@f
$LN16@f:

; 17   :    case 17: x = 14; break;

  000b4	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000bb	eb 58		 jmp	 SHORT $LN1@f
$LN17@f:

; 18   :    case 18: x = 14; break;

  000bd	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000c4	eb 4f		 jmp	 SHORT $LN1@f
$LN18@f:

; 19   :    case 19: x = 14; break;

  000c6	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000cd	eb 46		 jmp	 SHORT $LN1@f
$LN19@f:

; 20   :    case 22: x = 14; break;

  000cf	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000d6	eb 3d		 jmp	 SHORT $LN1@f
$LN20@f:

; 21   :    case 23: x = 14; break;

  000d8	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000df	eb 34		 jmp	 SHORT $LN1@f
$LN21@f:

; 22   :    case 28: x = 14; break;

  000e1	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000e8	eb 2b		 jmp	 SHORT $LN1@f
$LN22@f:

; 23   :    case 29: x = 14; break;

  000ea	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000f1	eb 22		 jmp	 SHORT $LN1@f
$LN23@f:

; 24   :    case 30: x = 14; break;

  000f3	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  000fa	eb 19		 jmp	 SHORT $LN1@f
$LN24@f:

; 25   :    case 31: x = 14; break;

  000fc	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  00103	eb 10		 jmp	 SHORT $LN1@f
$LN25@f:

; 26   :    case 33: x = 14; break;

  00105	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR _x$[ebp], 14	; 0000000eH
  0010c	eb 07		 jmp	 SHORT $LN1@f
$LN26@f:

; 27   :    default: x = -1;

  0010e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _x$[ebp], -1
$LN1@f:

; 28   :   }
; 29   : }

  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
  00119	0f 1f 00	 npad	 3
$LN28@f:
  0011c	00 00 00 00	 DD	 $LN4@f
  00120	00 00 00 00	 DD	 $LN5@f
  00124	00 00 00 00	 DD	 $LN6@f
  00128	00 00 00 00	 DD	 $LN26@f
  0012c	00 00 00 00	 DD	 $LN7@f
  00130	00 00 00 00	 DD	 $LN8@f
  00134	00 00 00 00	 DD	 $LN26@f
  00138	00 00 00 00	 DD	 $LN9@f
  0013c	00 00 00 00	 DD	 $LN10@f
  00140	00 00 00 00	 DD	 $LN11@f
  00144	00 00 00 00	 DD	 $LN26@f
  00148	00 00 00 00	 DD	 $LN12@f
  0014c	00 00 00 00	 DD	 $LN13@f
  00150	00 00 00 00	 DD	 $LN26@f
  00154	00 00 00 00	 DD	 $LN14@f
  00158	00 00 00 00	 DD	 $LN15@f
  0015c	00 00 00 00	 DD	 $LN16@f
  00160	00 00 00 00	 DD	 $LN17@f
  00164	00 00 00 00	 DD	 $LN18@f
  00168	00 00 00 00	 DD	 $LN26@f
  0016c	00 00 00 00	 DD	 $LN26@f
  00170	00 00 00 00	 DD	 $LN19@f
  00174	00 00 00 00	 DD	 $LN20@f
  00178	00 00 00 00	 DD	 $LN26@f
  0017c	00 00 00 00	 DD	 $LN26@f
  00180	00 00 00 00	 DD	 $LN26@f
  00184	00 00 00 00	 DD	 $LN26@f
  00188	00 00 00 00	 DD	 $LN21@f
  0018c	00 00 00 00	 DD	 $LN22@f
  00190	00 00 00 00	 DD	 $LN23@f
  00194	00 00 00 00	 DD	 $LN24@f
  00198	00 00 00 00	 DD	 $LN26@f
  0019c	00 00 00 00	 DD	 $LN25@f
_f	ENDP
_TEXT	ENDS
END
